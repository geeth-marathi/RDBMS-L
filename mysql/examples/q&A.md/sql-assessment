create database sql_assessment;
use sql_assessment;

drop table SELLERS;
create database sql_assessment;
use sql_assessment;
create table SELLERS (SELLER_ID INT NOT NULL AUTO_INCREMENT,COUNTRY varchar(20), JOINING_DATE date, PRIMARY KEY (SELLER_ID));
insert into SELLERS (COUNTRY,JOINING_DATE) VALUES 
("India","2007-05-06"),
("India","2007-05-06"),
("Pak","2007-05-06"),
("America","2007-05-06"),
("India","2007-05-06"),
("America","2007-05-06"),
("America","2007-05-07")
;
select * from SELLERS;

1) select * from (select COUNTRY, count(COUNTRY) SELLER_COUNT from SELLERS group by COUNTRY) SELLERS order by SELLERS.SELLER_COUNT desc;

2) select SELLER_ID, DAYNAME(JOINING_DATE) from SELLERS where DAYNAME(JOINING_DATE) = "Monday";


drop table EMPLOYEE;
create table EMPLOYEE (EMP_ID INT NOT NULL AUTO_INCREMENT,SALARY FLOAT(10,2), PRIMARY KEY (EMP_ID));
insert into EMPLOYEE (SALARY) values
(5000.00),
(500000.00),
(6790.00),
(5000.00),
(57000.00),
(4999.00),
(6758.00),
(114567.00)
;
select * from EMPLOYEE;

3) 
#Alternate even records
SET @ROW_NUM = 0;
select EMP_ID,SALARY from (select EMP_ID,SALARY, @ROW_NUM := @ROW_NUM+1 rn from EMPLOYEE) EMPLOYEE where rn%2 = 0;

#Alternate odd records
SET @ROW_NUM = 0;
select EMP_ID,SALARY from (select EMP_ID,SALARY, @ROW_NUM := @ROW_NUM+1 rn from EMPLOYEE) EMPLOYEE where rn%2 = 1;

4)
select EMPLOYEE.* from (select DISTINCT(SALARY) SAL_3RD from EMPLOYEE order by SALARY desc LIMIT 2,1) EMPLOYEE_2,EMPLOYEE where SALARY = SAL_3RD;

5)
SELECT ID, YEAR(BILLINGDATE) BILLINGYEAR FROM INVOICES WHERE YEAR(BILLINGDATE) >= 2010;

6)
50

7)
Having can only be used with GROUP BY CLAUSE, to exclude rows
WHERE is used to filter rows in a query

8)
SET @ROW_NUM = 0;
select EMP_ID,SALARY from (select EMP_ID,SALARY, @ROW_NUM := @ROW_NUM+1 rn from EMPLOYEE) EMPLOYEE, (SELECT COUNT(*) EMP_COUNT from EMPLOYEE) EMP_C where rn <= EMP_COUNT/4;

use sql_assessment;

drop table EMPLOYEE;
create table EMPLOYEE (EMP_ID INT NOT NULL AUTO_INCREMENT,SALARY FLOAT(10,2), DEPT_NO INT, PRIMARY KEY (EMP_ID));
insert into EMPLOYEE (SALARY,DEPT_NO) values
(5000.00,1),
(500000.00,2),
(6790.00,3),
(5000.00,4),
(57000.00,4),
(4999.00,3),
(6758.00,2),
(114567.00,1)
;
select * from EMPLOYEE;

9)
select * from EMPLOYEE, (select DEPT_NO, AVG(SALARY) DEPT_AVG_SAL from EMPLOYEE group by DEPT_NO) FILTERED_EMPLOYEE where EMPLOYEE.DEPT_NO = FILTERED_EMPLOYEE.DEPT_NO and EMPLOYEE.SALARY >= FILTERED_EMPLOYEE.DEPT_AVG_SAL;

drop table EMPLOYEE;
create table EMPLOYEE (EMP_ID INT NOT NULL AUTO_INCREMENT,SALARY FLOAT(10,2), PRIMARY KEY (EMP_ID));
insert into EMPLOYEE (SALARY) values
(5000.00),
(500000.00),
(6790.00),
(5000.00),
(57000.00),
(4999.00),
(6758.00),
(114567.00)
;
select * from EMPLOYEE;
select RANK(), SALARY from EMPLOYEE;

10)
SET @RANK = 0;
select EMPLOYEE.*,RANK from EMPLOYEE,(select SALARY, @RANK := @RANK + 1 RANK from ( SELECT DISTINCT(SALARY) SALARY from EMPLOYEE ORDER BY SALARY DESC ) FILTERED_SALARY) RANK_OF_SALARY where EMPLOYEE.SALARY = RANK_OF_SALARY.SALARY order by RANK;


drop table SELLER;
create table SELLER (SELLER_ID INT NOT NULL AUTO_INCREMENT,COUNTRY_CODE varchar(20), PRIMARY KEY (SELLER_ID));
insert into SELLER (COUNTRY_CODE) VALUES 
("IN"),
("US"),
("IN"),
("PK"),
("IN"),
("US"),
("IN"),
("PK"),
("NZ"),
("UK")
;
select * from SELLER;

drop table COUNTRY;
create table COUNTRY (COUNTRY_CODE varchar(2), COUNTRY varchar(30), PRIMARY KEY (COUNTRY_CODE,COUNTRY));
insert into COUNTRY (COUNTRY_CODE,COUNTRY) VALUES 
("IN","India"),
("US","America"),
("PK","Pak"),
("AF","Africa")
;
select * from COUNTRY;

11)
select SELLER.SELLER_ID, IFNULL(COUNTRY.COUNTRY, 'NA') COUNTRY from SELLER left outer join COUNTRY ON SELLER.COUNTRY_CODE = COUNTRY.COUNTRY_CODE;

12)
select SELLER.SELLER_ID, COUNTRY.COUNTRY COUNTRY from SELLER left outer join COUNTRY ON SELLER.COUNTRY_CODE = COUNTRY.COUNTRY_CODE where COUNTRY.COUNTRY IS NULL;

//, PRIMARY KEY (SELLER_ID,MONTH));

drop table SELLER;
create table SELLER (SELLER_ID INT,COUNTRY varchar(20),MONTH varchar(3),SALES varchar(20));
insert into SELLER (SELLER_ID,COUNTRY,MONTH,SALES) VALUES 
(1,"IN",1,35000),
(1,"IN",2,35001),
(1,"IN",3,35002),
(1,"IN",4,35003),
(1,"IN",5,35034),
(1,"IN",6,35015),
(2,"IN",1,35012),
(2,"IN",2,3509),
(2,"IN",3,35008),
(2,"IN",4,35009),
(2,"IN",5,35010),
(2,"IN",6,35011),
(3,"Ic",1,35000),
(3,"Ic",2,35001),
(3,"Ic",3,35002),
(3,"Ic",4,35003),
(3,"Ic",5,35004),
(3,"Ic",6,35005),
(5,"Ic",1,35006),
(5,"Ic",2,35007),
(5,"Ic",3,35008),
(5,"Ic",4,35009),
(5,"Ic",5,35010),
(5,"Ic",6,35011)
;
select * from SELLER;

13)
SELECT a.* FROM SELLER AS a WHERE (SELECT COUNT(*) FROM SELLER AS b WHERE b.COUNTRY = a.COUNTRY AND b.SALES >= a.SALES) <= 10 ORDER BY a.COUNTRY ASC, a.SALES DESC;


14)
select 
SELLER_D.SELLER_ID,
JAN_SALES.SALES JAN_SALES,
FEB_SALES.SALES FEB_SALES,
MAR_SALES.SALES MAR_SALES,
APR_SALES.SALES APR_SALES,
MAY_SALES.SALES MAY_SALES, 
JUN_SALES.SALES JUN_SALES
FROM
(SELECT distinct(SELLER_ID) from SELLER ) SELLER_D,
(SELECT SELLER_ID,MONTH,SALES from SELLER where MONTH = 1 ) JAN_SALES,
(SELECT SELLER_ID,MONTH,SALES from SELLER where MONTH = 2 ) FEB_SALES,
(SELECT SELLER_ID,MONTH,SALES from SELLER where MONTH = 3 ) MAR_SALES,
(SELECT SELLER_ID,MONTH,SALES from SELLER where MONTH = 4 ) APR_SALES,
(SELECT SELLER_ID,MONTH,SALES from SELLER where MONTH = 5 ) MAY_SALES,
(SELECT SELLER_ID,MONTH,SALES from SELLER where MONTH = 6 ) JUN_SALES
where 
SELLER_D.SELLER_ID = JAN_SALES.SELLER_ID and
SELLER_D.SELLER_ID = FEB_SALES.SELLER_ID and
SELLER_D.SELLER_ID = MAR_SALES.SELLER_ID and
SELLER_D.SELLER_ID = APR_SALES.SELLER_ID and
SELLER_D.SELLER_ID = MAY_SALES.SELLER_ID and
SELLER_D.SELLER_ID = JUN_SALES.SELLER_ID;


15)
select 
	INN.SELLER_ID,
	INN.TOT TOTAL_SALES,
	INN.MAX MAX_SALES,
	INN.MIN MIN_SALES,
	MAX_SALES.MONTH MAX_SALES_MONTH,
	MIN_SALES.MONTH MIN_SALES_MONTH
from create table SELLER (SELLER_ID INT,COUNTRY varchar(20),MONTH varchar(3),SALES varchar(20));
	(select COUNTRY,SELLER_ID,SUM(SALES) TOT,MAX(SALES) MAX, MIN(SALES) MIN FROM SELLER GROUP BY COUNTRY,SELLER_ID) INN,
	(select SELLER.SELLER_ID,MONTH FROM SELLER,(select COUNTRY,SELLER_ID, MAX(SALES) MAX FROM SELLER GROUP BY COUNTRY,SELLER_ID) MAX_INN WHERE SELLER.SELLER_ID = MAX_INN.SELLER_ID and SELLER.SALES = MAX_INN.MAX) MAX_SALES,
	(select SELLER.SELLER_ID,MONTH FROM SELLER,(select COUNTRY,SELLER_ID, MIN(SALES) MIN FROM SELLER GROUP BY COUNTRY,SELLER_ID) MIN_INN WHERE SELLER.SELLER_ID = MIN_INN.SELLER_ID and SELLER.SALES = MIN_INN.MIN) MIN_SALES
where INN.SELLER_ID = MAX_SALES.SELLER_ID and INN.SELLER_ID = MIN_SALES.SELLER_ID;


drop table ORDERS;
create table ORDERS (CUSTOMER_ID INT,ORDER_ID varchar(20),ORDER_TIME DATETIME);
insert into ORDERS VALUES 
(1,"A","2017-02-12 10:09:24"),
(1,"B","2017-06-01 14:07:30"),
(1,"C","2017-09-11 01:01:01"),
(2,"D","2016-01-01 12:00:00"),
(2,"E","2017-10-01 08:00:00"),
(3,"F","2017-03-01 05:00:01"),
(3,"G","2017-06-17 20:00:50");

16)
select ORDER_ID, AVG(TIME_DIF) from (select ORDERS.*, DATEDIFF(ORDER_TIME,@x) TIME_DIF, @x:=ORDER_TIME CURR_DATE from ORDERS order by ORDER_ID,ORDER_TIME) FORMED_TABLE group by ORDER_ID;


drop table INN;
create table INN (DATE2 date, ORDER_ID varchar(256));
insert into INN values 
	("2017-01-02","A"),
	("2017-01-31","B"),
	("2017-02-01","C"),
	("2017-09-01","D");
17)
CREATE TABLE OUTTT AS select MONTH,ORDER_ID, COUNT(*) NUMBER_OF_ORDERS from (SELECT MONTHNAME(DATE2) MONTH, ORDER_ID from INN) SUB_INN GROUP BY MONTH,ORDER_ID;

Verify
select * from OUTTT;

18)
drop table URLS;
create table URLS (URL varchar(256));
insert into URLS values 
	("www.amazon.com"),
	("www.amazon.ca"),
	("www.amazon.uk"),
	("www.amazon.in");

drop table MAP;
create table MAP (SUFFIX varchar(10),Country varchar(256));
insert into MAP values 
	(".com","USA"),
	(".ca","cannada"),
	(".uk","United Kingdom"),
	(".in","INDIA");


SELECT URL,COUNTRY from URLS, MAP where CONCAT('.',REVERSE(SUBSTRING_INDEX(REVERSE(URL),'.','1'))) = SUFFIX;

19)
